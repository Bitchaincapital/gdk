cache:
  key: "17"
  paths:
    - subprojects/packagecache/

image: greenaddress/ci@sha256:d2de7b5dda6d8a88fec04f8b2b202e8ef7e7d0550afd0ba73c2e70efbbb1f6c1

stages:
  - format
  - build
  - test
  - deploy

.fedora_images:
  image: greenaddress/fedora_ci@sha256:fa6139647ea2c92e3d744d51f7216e3ea6a2907c119b5fe978f6f1989ac626a9
  tags:
    - ga

.ndk_release:
  tags:
    - ga
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    when: on_success
    paths:
    - gdk-android-jni

.osx_test:
  tags:
    - osx
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - subprojects/packagecache/

.py_release:
  tags:
    - ga
  before_script:
    - mkdir $CI_PROJECT_DIR/gdk-python
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    when: on_success
    paths:
    - gdk-python

.ios_release:
  extends: .osx_test
  before_script:
    - mkdir $CI_PROJECT_DIR/gdk-iphone
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    when: on_success
    paths:
    - gdk-iphone

test_format:
  tags:
    - ga
  stage: format
  script:
    - ./tools/format.sh && git diff --exit-code

test_gcc:
  tags:
    - ga
  script:
    - ./tools/build.sh --gcc --enable-rust

release_py3m_buster:
  extends: .py_release
  script:
    - ./tools/build.sh --install $PWD/gdk-python --gcc --python-version 3.7 --enable-rust

release_py3m_buster_debug:
  extends: .py_release
  when: manual
  script:
    - ./tools/build.sh --buildtype=debug --install $PWD/gdk-python --gcc --python-version 3.7 --enable-rust

release_py3m_ubuntu_18.04:
  image: greenaddress/ci@sha256:c4693baf6d3d1f6ef2acc9a10382c26c60ab8f78b17d6d5c8db6bbd668c4c7e1
  extends: .py_release
  script:
    - ./tools/build.sh --install $PWD/gdk-python --gcc --python-version 3.6 --enable-rust

release_py3m_osx:
  extends: .py_release
  tags:
    - osx
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/build.sh --install $PWD/gdk-python --clang --python-version 3.7 --enable-rust

test_fedora_gcc:
  extends: .fedora_images
  script:
    - ./tools/build.sh --gcc --enable-rust

test_fedora_debug_gcc:
  extends: .fedora_images
  only:
    refs:
      - master
  script:
    - ./tools/build.sh --buildtype=debugoptimized --gcc --enable-rust

test_fedora_clang:
  extends: .fedora_images
  script:
    - ./tools/build.sh --clang --enable-rust

test_clang:
  tags:
    - ga
  script:
    - ./tools/build.sh --clang --enable-rust --enable-tests # REVERTME
    - ninja -C build-clang test_rust && ./build-clang/test_rust # REVERTME

gdk_clang_ndk_armeabi-v7a:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - ANDROID_NDK=/android-ndk-r21 ./tools/build.sh --install $PWD/gdk-android-jni --ndk armeabi-v7a --lto=true --enable-rust

gdk_clang_ndk_arm64-v8a:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - ANDROID_NDK=/android-ndk-r21 ./tools/build.sh --install $PWD/gdk-android-jni --ndk arm64-v8a --lto=true --enable-rust

gdk_clang_ndk_arm64-v8a-debug:
  extends: .ndk_release
  when: manual
  script:
    - mkdir gdk-android-jni
    - ANDROID_NDK=/android-ndk-r21 ./tools/build.sh --buildtype=debug --install $PWD/gdk-android-jni --ndk arm64-v8a --lto=true --enable-rust

gdk_clang_ndk_x86:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - ANDROID_NDK=/android-ndk-r21 ./tools/build.sh --install $PWD/gdk-android-jni --ndk x86 --lto=true --enable-rust

gdk_clang_ndk_x86_64:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - ANDROID_NDK=/android-ndk-r21 ./tools/build.sh --install $PWD/gdk-android-jni --ndk x86_64 --lto=true --enable-rust

test_osx_clang:
  extends: .osx_test
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - ./tools/build.sh --clang --lto=true --enable-rust

release_osx_ios:
  extends: .ios_release
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - ./tools/build.sh --iphone static --lto=true --install $PWD/gdk-iphone --enable-rust

release_osx_ios_sim:
  extends: .ios_release
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - ./tools/build.sh --iphonesim static --lto=true --install $PWD/gdk-iphone --enable-rust

test_osx_clang_ndk_armeabi-v7a:
  only:
    refs:
      - master
  extends: .osx_test
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - ./tools/build.sh --ndk armeabi-v7a --enable-rust

test_osx_clang_ndk_arm64-v8a:
  only:
    refs:
      - master
  extends: .osx_test
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - ./tools/build.sh --ndk arm64-v8a --enable-rust

test_osx_clang_ndk_x86:
  extends: .osx_test
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - ./tools/build.sh --ndk x86 --enable-rust

test_osx_clang_ndk_x86_64:
  only:
    refs:
      - master
  extends: .osx_test
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - ./tools/build.sh --ndk x86_64 --enable-rust

# TODO: gdk-rust breaks this, figure out why
#
# test_freebsd_gcc:
#   tags:
#     - freebsd
#   script:
#     - cd $CI_PROJECT_DIR
#     - ./tools/build.sh --gcc --enable-rust

test_freebsd_clang:
  tags:
    - freebsd
  before_script:
    - export PATH="/usr/local/llvm60/bin:$PATH"
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/build.sh --clang --enable-rust

test_windows_mingw_w64_cross:
  tags:
    - ga
  artifacts:
    expire_in: 1 hour
    when: on_success
    paths:
    - build-windows-mingw-w64/src/libgreenaddress*
  script:
    - ./tools/build.sh --mingw-w64 --enable-rust

apidocs:
  tags:
    - ga
  artifacts:
    expire_in: 14 days
    when: on_success
    paths:
    - apidocs.tar.gz
  script:
    - virtualenv -p python3 .venv
    - source .venv/bin/activate
    - pip3 install sphinx sphinx_rtd_theme
    - sphinx-build -b html -a -c docs/source docs/source docs/build/html
    - cd docs/build && tar czf ../../apidocs.tar.gz html/ && cd ../..
    - deactivate

integration_test_rust:
  tags:
    - ga
  script:
    - source /root/.cargo/env
    - ./tools/build.sh --clang --buildtype=debug --enable-rust
    - export WALLY_DIR=$PWD/build-clang/libwally-core/build/lib/
    - git clone https://github.com/Blockstream/electrs electrs-elements
    - cd electrs-elements && git checkout b18f82c024ab607cd25dc9f1fcde59499e75099c && cargo build --features liquid && cd ..
    - export ELECTRS_LIQUID_EXEC=$PWD/electrs-elements/target/debug/electrs
    - git clone https://github.com/romanz/electrs electrs-bitcoin
    - cd electrs-bitcoin && git checkout f776473f3c532451c459cbd944826b2fc7d4f546 && cargo build && cd ..
    - export ELECTRS_EXEC=$PWD/electrs-bitcoin/target/debug/electrs
    - curl https://bitcoincore.org/bin/bitcoin-core-0.20.1/bitcoin-0.20.1-x86_64-linux-gnu.tar.gz | tar -xvz bitcoin-0.20.1/bin/bitcoind
    - export BITCOIND_EXEC=$PWD/bitcoin-0.20.1/bin/bitcoind
    - curl -L https://github.com/ElementsProject/elements/releases/download/elements-0.18.1.8/elements-0.18.1.8-x86_64-linux-gnu.tar.gz | tar -xvz elements-0.18.1.8/bin/elementsd
    - export ELEMENTSD_EXEC=$PWD/elements-0.18.1.8/bin/elementsd
    - cd subprojects/gdk_rust
    - DEBUG=1 ./launch_integration_tests.sh bitcoin
    - DEBUG=1 ./launch_integration_tests.sh liquid

package_release:
  tags:
    - garelease
  stage: deploy
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 14 days
    paths:
    - $CI_PROJECT_DIR/gdk_dist
    when: on_success
  script:
    - cd $CI_PROJECT_DIR
    - mkdir gdk-android-symbols
    - mkdir gdk_dist
    - find gdk-android-jni -name "*.syms" -type f -exec cp --parents {} gdk-android-symbols \;
    - tar -czf gdk_dist/gdk-android-symbols.tar.gz gdk-android-symbols --remove-files
    - find gdk-android-jni -name "*.a" -type f -delete
    - find gdk-android-jni -name "*.syms" -type f -delete
    - tar -czf gdk_dist/gdk-android-jni.tar.gz gdk-android-jni --remove-files
    - tar -czf gdk_dist/gdk-iphone.tar.gz gdk-iphone --remove-files
    - mv gdk-python/*whl gdk_dist/
    - cd gdk_dist
    - /opt/process_release
  dependencies:
  - gdk_clang_ndk_armeabi-v7a
  - gdk_clang_ndk_arm64-v8a
  - gdk_clang_ndk_x86
  - gdk_clang_ndk_x86_64
  - release_py3m_buster
  - release_py3m_ubuntu_18.04
  - release_py3m_osx
  - release_osx_ios
  - apidocs
  - release_osx_ios_sim
